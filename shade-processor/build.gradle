apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'com.novoda.bintray-release'

import com.android.build.gradle.internal.LoggerWrapper
import com.android.build.gradle.internal.SdkHandler

def javaVersions = rootProject.ext.compilerJavaVersions
sourceCompatibility = javaVersions.sourceCompatibility
targetCompatibility = javaVersions.targetCompatibility

def logger = new LoggerWrapper(project.logger)
def handler = new SdkHandler(project, logger)
handler.sdkLoader.repositories.forEach { repository ->
    repositories.maven {
        url = repository.toURI()
    }
}

dependencies {
    compile 'com.squareup:javapoet:1.7.0'
    compile 'com.google.inject:guice:4.1.0'
    compile 'com.google.auto.service:auto-service:1.0-rc2'
    compile 'com.google.code.findbugs:jsr305:3.0.1'
    compile 'com.google.android:android:4.1.1.4'
    compile 'com.android.support:support-annotations:24.2.1'

    testCompile 'junit:junit:4.12'
    testCompile 'org.assertj:assertj-core:3.5.2'
    testCompile 'org.mockito:mockito-all:2.0.2-beta'
    testCompile 'com.google.testing.compile:compile-testing:0.10'
}

sourceSets {
    main {
        java.srcDirs = ['src/main/java', '../shade/src/main/java']
    }
    test {
        java.srcDirs = ['src/test/java', 'build/generated/source/']
        resources.srcDirs = ['src/test/resources']
    }
}

jacoco {
    toolVersion = '0.7.7.201606060606'
    reportsDir = file("${project.buildDir}/reports/jacoco")
}

jacocoTestReport {
    group = 'report'
    description = 'Generate unit test coverage report'
    dependsOn = ['test']

    reports {
        xml.enabled = true
        csv.enabled = false
        html.enabled = true
    }
}

task javadocJar(type: Jar, dependsOn:javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.java.srcDirs
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

publish {
    def metadata = rootProject.ext.metadata
    userOrg = metadata.userOrg
    repoName = metadata.repoName
    groupId = metadata.groupId
    artifactId = 'shade-processor'
    description = 'Automatic code generation for the SharedPreferences operation'
    version = metadata.version
    website = metadata.website
    licences = metadata.licenses
}
